# Adapted from https://github.com/nathanfranke/gdextension/blob/main/.github/workflows/build.yml
name: Builds
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux
          - identifier: linux-debug
            name: Linux Debug
            runner: ubuntu-20.04
            target: template_debug
            platform: linux
            arch: x86_64

          - identifier: linux-release
            name: Linux Release
            runner: ubuntu-20.04
            target: template_release
            platform: linux
            arch: x86_64

          # Windows
          - identifier: windows-debug
            name: Windows Debug
            runner: ubuntu-20.04
            target: template_debug
            platform: windows
            arch: x86_64

          - identifier: windows-release
            name: Windows Release
            runner: ubuntu-20.04
            target: template_release
            platform: windows
            arch: x86_64

          # Android Arm64
          - identifier: android-release
            name: Android Release Arm64
            runner: ubuntu-20.04
            target: template_release
            platform: android
            arch: arm64

          - identifier: android-debug
            name: Android Debug Arm64
            runner: ubuntu-20.04
            target: template_debug
            platform: android
            arch: arm64

          # Android x86_64
          - identifier: android-release
            name: Android Release x86_64
            runner: ubuntu-20.04
            target: template_release
            platform: android
            arch: x86_64

          - identifier: android-debug
            name: Android Debug x86_64
            runner: ubuntu-20.04
            target: template_debug
            platform: android
            arch: x86_64

          # Mac
          - identifier: macos-debug
            name: macOS (universal) Debug
            runner: macos-latest
            target: template_debug
            platform: macos
            arch: universal

          - identifier: macos-release
            name: macOS (universal) Release
            runner: macos-latest
            target: template_release
            platform: macos
            arch: universal

    steps:
      - name: (Windows) Install mingw64
        if: ${{ startsWith(matrix.identifier, 'windows-') }}
        shell: sh
        run: |
          sudo apt-get install mingw-w64
          sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
          sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix

      - name: (Android) Install JDK 17
        if: ${{ startsWith(matrix.identifier, 'android-') }}
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: (Android) Install Android SDK
        if: ${{ startsWith(matrix.identifier, 'android-') }}
        uses: android-actions/setup-android@v3

      # From Godot docs, might not be necessary.
      #- name: (Android) Install Android Tools
      #  if: ${{ startsWith(matrix.identifier, 'android-') }}
      #  shell: sh
      #  run: |
      #    "$ANDROID_SDK_ROOT"/cmdline-tools/latest/bin/sdkmanager --sdk_root="$ANDROID_SDK_ROOT" "platform-tools" "build-tools;30.0.3" "platforms;android-29" "cmdline-tools;latest" "cmake;3.10.2.4988404"

      - name: (Android) Install NDK r23c
        if: ${{ matrix.platform == 'android' }}
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r23c
          link-to-sdk: true

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Set up SCons
        shell: bash
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          scons --version

      - name: Checkout project
        uses: actions/checkout@v2
        with:
          submodules: recursive

#       TODO: Cache doesn't work yet. SCons rebuilds the objects even if they already exist. Could be caused by modification dates or extension_api.json.
#             fetch-depth: 0 May be needed for cache. See: <https://github.com/actions/checkout/issues/468>.
#      - name: Set up SCons cache
#        uses: actions/cache@v3
#        with:
#          path: |
#            ${{ github.workspace }}/.scons-cache/
#            ${{ github.workspace }}/**/.sconsign.dblite
#            ${{ github.workspace }}/godot-cpp/gen/
#          key: ${{ matrix.identifier }}-${{ github.ref }}-${{ github.sha }}
#          restore-keys: |
#            ${{ matrix.identifier }}-${{ github.ref }}-${{ github.sha }}
#            ${{ matrix.identifier }}-${{ github.ref }}
#            ${{ matrix.identifier }}

      - name: Compile extension
        shell: sh
#        env:
#          SCONS_CACHE: '${{ github.workspace }}/.scons-cache/'
#          SCONS_CACHE_LIMIT: 8192
        run: |
          scons target='${{ matrix.target }}' platform='${{ matrix.platform }}' arch='${{ matrix.arch }}' -j2
          ls -l demo/addons/*/bin/

      - name: Copy extra files to addon
        shell: sh
        run: |
          for addon in ${{ github.workspace }}/demo/addons/*/; do
            cp -n '${{ github.workspace }}/README.md' '${{ github.workspace }}/LICENSE' "$addon"
          done

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.repository.name }}
          path: |
            ${{ github.workspace }}/demo/
